# Docker Compose for Prism DNS Server Development
services:
  # Main server service
  server:
    build:
      context: .
      target: development
    container_name: prism-server
    ports:
      - "8080:8080"  # TCP server port
      - "8081:8081"  # REST API port
    volumes:
      - .:/app
      - server_data:/app/data
    environment:
      - PRISM_ENV=development
      - PRISM_CONFIG_PATH=/app/config/server.yaml
      - EMAIL_PROVIDER=console
      - EMAIL_CONSOLE_FORMAT=pretty
      - EMAIL_FROM_ADDRESS=dev@prism.local
      - EMAIL_FROM_NAME=Prism DNS (Dev)
      - APP_URL=http://localhost:8090
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      # PowerDNS configuration for development
      - POWERDNS_ENABLED=true
      - POWERDNS_API_URL=http://powerdns-server:8053/api/v1
      - POWERDNS_API_KEY=development-api-key
      - POWERDNS_DEFAULT_ZONE=dev.prism.local.
      - POWERDNS_FALLBACK_TO_MOCK=true
      - POWERDNS_FEATURE_FLAG_PERCENTAGE=100
    command: >
      sh -c "python -m server.main --config /app/config/server.yaml"
    depends_on:
      - database
    restart: unless-stopped
    networks:
      - prism-network

  # Nginx web server (production-like setup)
  nginx:
    build:
      context: ./web
      dockerfile: Dockerfile
      target: development
    container_name: prism-nginx
    ports:
      - "8090:80"  # Web interface port
    volumes:
      - ./web:/usr/share/nginx/html:ro
      - ./web/nginx.dev.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - server
    restart: unless-stopped
    networks:
      - prism-network

  # Database service (SQLite with volume)
  database:
    image: alpine:3.18
    container_name: prism-database
    volumes:
      - database_data:/data
    command: >
      sh -c "mkdir -p /data && tail -f /dev/null"
    networks:
      - prism-network

  # PowerDNS Database (PostgreSQL)
  powerdns-database:
    image: postgres:15-alpine
    container_name: powerdns-database
    environment:
      POSTGRES_DB: powerdns
      POSTGRES_USER: powerdns
      POSTGRES_PASSWORD: development-db-password
    volumes:
      - powerdns-db-data:/var/lib/postgresql/data
      - ./powerdns/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    networks:
      - prism-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U powerdns"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - with-powerdns

  # PowerDNS Server
  powerdns-server:
    build:
      context: ./powerdns
      dockerfile: Dockerfile
    image: powerdns:local
    container_name: powerdns-server
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "8053:8053"
    environment:
      PDNS_API_KEY: development-api-key
      PDNS_DB_HOST: powerdns-database
      PDNS_DB_PORT: 5432
      PDNS_DB_NAME: powerdns
      PDNS_DB_USER: powerdns
      PDNS_DB_PASSWORD: development-db-password
      PDNS_API_ALLOW_FROM: 0.0.0.0/0,::/0
      PDNS_DEFAULT_ZONE: dev.prism.local
      PDNS_LOG_LEVEL: 5
    depends_on:
      powerdns-database:
        condition: service_healthy
    networks:
      - prism-network
    healthcheck:
      test: ["CMD", "pdns_control", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    profiles:
      - with-powerdns

  # Test runner service
  tests:
    build:
      context: .
      target: test
    container_name: prism-tests
    volumes:
      - .:/app
      - test_coverage:/app/htmlcov
    environment:
      - PRISM_ENV=test
      - PYTHONPATH=/app
    command: >
      sh -c "python -m pytest tests/ -v --cov=server --cov-report=html"
    depends_on:
      - database
    networks:
      - prism-network
    profiles:
      - testing

  # Development tools service
  dev-tools:
    build:
      context: .
      target: development
    container_name: prism-dev-tools
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app
    command: >
      sh -c "echo 'Development tools ready' && tail -f /dev/null"
    networks:
      - prism-network
    profiles:
      - tools

  # MailHog for local email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: prism-mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - prism-network
    profiles:
      - development
      - testing

volumes:
  # Persistent data volume for database
  database_data:
    driver: local
  
  # Server data volume
  server_data:
    driver: local
  
  # Test coverage reports
  test_coverage:
    driver: local
  
  # PowerDNS database volume
  powerdns-db-data:
    driver: local

networks:
  prism-network:
    driver: bridge