version: '3.8'

services:
  # Use existing PostgreSQL for PowerDNS
  powerdns-db:
    image: postgres:15-alpine
    container_name: test-powerdns-db
    environment:
      POSTGRES_DB: powerdns
      POSTGRES_USER: powerdns
      POSTGRES_PASSWORD: testpass
    volumes:
      - ./powerdns/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    networks:
      - test-network

  # PowerDNS using existing image
  powerdns:
    image: manageddns-powerdns:latest
    container_name: test-powerdns
    ports:
      - "5353:53/tcp"
      - "5353:53/udp"
      - "8053:8053"
    environment:
      PDNS_API_KEY: test-api-key
      PDNS_DB_HOST: powerdns-db
      PDNS_DB_PORT: 5432
      PDNS_DB_NAME: powerdns
      PDNS_DB_USER: powerdns
      PDNS_DB_PASSWORD: testpass
      PDNS_API_ALLOW_FROM: 0.0.0.0/0,::/0
    depends_on:
      - powerdns-db
    networks:
      - test-network

  # Prism server with PowerDNS enabled
  prism-server:
    build:
      context: .
      target: development
    container_name: test-prism-server
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - .:/app
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app
      - PRISM_POWERDNS_ENABLED=true
      - PRISM_POWERDNS_API_URL=http://powerdns:8053/api/v1
      - PRISM_POWERDNS_API_KEY=test-api-key
    command: python -m server.main --config /app/config/server.yaml
    depends_on:
      - powerdns
    networks:
      - test-network

networks:
  test-network:
    driver: bridge