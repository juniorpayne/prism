# Staging Docker Compose Override
# Production-like environment for testing and validation

services:
  prism-server:
    build:
      context: ../..
      target: production
    container_name: prism-staging-server
    ports:
      - "8080:8080"  # TCP server (external)
      # API internal only - nginx proxies
    volumes:
      - staging_data:/app/data
      - staging_logs:/app/logs
      - staging_backups:/app/backups
      - ../../config:/app/config:ro
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - ENVIRONMENT=staging
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - prism-staging-backend
      - prism-staging-frontend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.8'
          memory: 1G
        reservations:
          cpus: '0.2'
          memory: 256M
    security_opt:
      - no-new-privileges:true

  # PostgreSQL database for staging
  database:
    image: postgres:15-alpine
    container_name: prism-staging-database
    environment:
      - POSTGRES_DB=prism_staging
      - POSTGRES_USER=prism
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_INITDB_ARGS=--auth-host=md5
    volumes:
      - staging_db_data:/var/lib/postgresql/data
      - staging_db_logs:/var/log/postgresql
    restart: unless-stopped
    networks:
      - prism-staging-backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prism"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    security_opt:
      - no-new-privileges:true

  # Nginx web server and reverse proxy
  nginx:
    build:
      context: ../../web
      target: production
    container_name: prism-staging-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - staging_ssl_certs:/etc/nginx/ssl:ro
      - staging_nginx_logs:/var/log/nginx
      - ./nginx.staging.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - prism-server
    restart: unless-stopped
    networks:
      - prism-staging-frontend
      - prism-staging-backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/nginx-health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M

volumes:
  staging_data:
    driver: local
  staging_logs:
    driver: local
  staging_backups:
    driver: local
  staging_db_data:
    driver: local
  staging_db_logs:
    driver: local
  staging_ssl_certs:
    driver: local
  staging_nginx_logs:
    driver: local

networks:
  prism-staging-frontend:
    driver: bridge
  prism-staging-backend:
    driver: bridge
    internal: true